#!/usr/bin/env python3
"""
–†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ SSE —Å–æ–±—ã—Ç–∏–π
"""
import os
import sys
import django
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from api.models import User, Estimate, Project, Status
from api.sse_views import sse_manager

def send_test_event():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ SSE —Å–æ–±—ã—Ç–∏–µ"""
    
    print("=== –†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ SSE —Å–æ–±—ã—Ç–∏—è ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç
    project = Project.objects.first()
    if not project:
        print("‚ùå –ù–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
        
    print(f"üìÅ –ü—Ä–æ–µ–∫—Ç: {project.project_name} (ID: {project.project_id})")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å–º–µ—Ç—ã
    event_data = {
        'estimate_id': 999,  # –¢–µ—Å—Ç–æ–≤—ã–π ID
        'estimate_number': f'TEST_{int(time.time())}',
        'project_id': project.project_id,
        'project_name': project.project_name,
        'foreman_id': None,
        'foreman_name': None,
        'creator_id': None,
        'creator_name': None,
        'status': '–ß–µ—Ä–Ω–æ–≤–∏–∫',
        'created_at': None,
        'test_event': True,  # –ú–∞—Ä–∫–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        'message': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ SSE —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI'
    }
    
    print("\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ estimate.created –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    print(f"   –î–∞–Ω–Ω—ã–µ: {event_data}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤—Å–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    sse_manager.broadcast_to_all(
        event_type='estimate.created',
        data=event_data
    )
    
    print("‚úÖ –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = sse_manager.get_stats()
    print(f"\nüìä SSE —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {stats['total_connections']}")
    if stats['users']:
        print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        for user_id, connections in stats['users'].items():
            try:
                user = User.objects.get(user_id=user_id)
                print(f"     - {user.email} ({user.role.role_name}): {connections} –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")
            except User.DoesNotExist:
                print(f"     - User ID {user_id}: {connections} –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")
    else:
        print("   ‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π!")
        print("   üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é")

if __name__ == "__main__":
    send_test_event()