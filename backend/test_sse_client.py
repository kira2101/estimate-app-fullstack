#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π SSE –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""
import os
import sys
import django
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from api.models import User, AuthToken

def test_sse_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä
        manager = User.objects.get(email='manager@example.com')
        manager_token = AuthToken.objects.filter(user=manager).first()
        
        if not manager_token:
            print("‚ùå –£ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞!")
            return
            
        print(f"‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º SSE –¥–ª—è: {manager.email}")
        token_str = str(manager_token.token)
        print(f"   –¢–æ–∫–µ–Ω: {token_str[:20]}...")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å —Ç–æ–∫–µ–Ω–æ–º
        sse_url = f'http://localhost:8000/api/v1/sse/events/?token={token_str}'
        
        print(f"\nüîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SSE: {sse_url}")
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        headers = {
            'Accept': 'text/event-stream',
            'Cache-Control': 'no-cache'
        }
        
        response = requests.get(sse_url, headers=headers, stream=True, timeout=5)
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üì° –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            print("\n‚úÖ SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
            print("üì® –û–∂–∏–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è (–ø–µ—Ä–≤—ã–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è)...")
            
            # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏–π
            line_count = 0
            for line in response.iter_lines():
                if line:
                    decoded_line = line.decode('utf-8')
                    print(f"   > {decoded_line}")
                    
                    # –ü–∞—Ä—Å–∏–º data: —Å–æ–æ–±—â–µ–Ω–∏—è
                    if decoded_line.startswith('data: '):
                        try:
                            data = json.loads(decoded_line[6:])
                            print(f"     –°–æ–±—ã—Ç–∏–µ: {data.get('event', 'unknown')}")
                        except json.JSONDecodeError:
                            pass
                    
                    line_count += 1
                    if line_count > 10:  # –ß–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫
                        break
                        
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SSE: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:500]}")
            
    except requests.exceptions.Timeout:
        print("‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ SSE")
    except requests.exceptions.ConnectionError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_sse_connection()