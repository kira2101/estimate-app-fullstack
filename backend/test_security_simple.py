#!/usr/bin/env python
"""
–ü–†–û–°–¢–û–ô –ù–û –≠–§–§–ï–ö–¢–ò–í–ù–´–ô –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º—ã–µ –≤—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
"""
import os
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')

import django
django.setup()

from django.test import RequestFactory
from rest_framework.exceptions import PermissionDenied, NotFound
from api.models import User, Estimate, Role
from api.views import EstimateViewSet

def test_direct_access_security():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º—ã–µ –º–µ—Ç–æ–¥—ã –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–º–µ—Ç–∞–º"""
    print("üîí –ü–†–û–°–¢–û–ô –ù–û –ù–ê–î–ï–ñ–ù–´–ô –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    print("=" * 60)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        manager_role = Role.objects.get(role_name='–º–µ–Ω–µ–¥–∂–µ—Ä')
        foreman_role = Role.objects.get(role_name='–ø—Ä–æ—Ä–∞–±') 
        
        manager = User.objects.filter(role=manager_role).first()
        foreman1 = User.objects.filter(role=foreman_role).first()
        foreman2 = User.objects.filter(role=foreman_role).exclude(user_id=foreman1.user_id).first()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–º–µ—Ç—ã
        foreman1_estimates = list(Estimate.objects.filter(foreman=foreman1).values_list('estimate_id', flat=True))
        foreman2_estimates = list(Estimate.objects.filter(foreman=foreman2).values_list('estimate_id', flat=True))
        all_estimates = list(Estimate.objects.all().values_list('estimate_id', flat=True))
        
        print(f"üë§ –ú–µ–Ω–µ–¥–∂–µ—Ä: {manager.full_name}")
        print(f"üë§ –ü—Ä–æ—Ä–∞–± 1: {foreman1.full_name} (—Å–º–µ—Ç—ã: {foreman1_estimates})")
        print(f"üë§ –ü—Ä–æ—Ä–∞–± 2: {foreman2.full_name} (—Å–º–µ—Ç—ã: {foreman2_estimates})")
        print(f"üìä –í—Å–µ–≥–æ —Å–º–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_estimates)}")
        print()
        
        factory = RequestFactory()
        
        # –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ get_queryset –¥–ª—è –ø—Ä–æ—Ä–∞–±–∞ 1
        print("üß™ –¢–ï–°–¢ 1: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è queryset –¥–ª—è –ø—Ä–æ—Ä–∞–±–∞ 1")
        request = factory.get('/api/v1/estimates/')
        request.user = foreman1
        
        view = EstimateViewSet()
        view.request = request
        view.action = 'list'
        
        foreman1_queryset = view.get_queryset()
        foreman1_visible = list(foreman1_queryset.values_list('estimate_id', flat=True))
        
        print(f"   –ü—Ä–æ—Ä–∞–± 1 –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å: {foreman1_estimates}")
        print(f"   –ü—Ä–æ—Ä–∞–± 1 –≤–∏–¥–∏—Ç —á–µ—Ä–µ–∑ queryset: {foreman1_visible}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ —Å–º–µ—Ç—ã
        unexpected_access = [eid for eid in foreman1_visible if eid not in foreman1_estimates]
        missing_access = [eid for eid in foreman1_estimates if eid not in foreman1_visible]
        
        if unexpected_access:
            print(f"   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –£–Ø–ó–í–ò–ú–û–°–¢–¨: –í–∏–¥–∏—Ç —á—É–∂–∏–µ —Å–º–µ—Ç—ã: {unexpected_access}")
            return False
            
        if missing_access:
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: –ù–ï –≤–∏–¥–∏—Ç —Å–≤–æ–∏ —Å–º–µ—Ç—ã: {missing_access}")
            return False
            
        print("   ‚úÖ –ü—Ä–æ—Ä–∞–± 1 –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ —Å–º–µ—Ç—ã")
        print()
        
        # –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ get_queryset –¥–ª—è –ø—Ä–æ—Ä–∞–±–∞ 2  
        print("üß™ –¢–ï–°–¢ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è queryset –¥–ª—è –ø—Ä–æ—Ä–∞–±–∞ 2")
        request.user = foreman2
        view.request = request
        
        foreman2_queryset = view.get_queryset()
        foreman2_visible = list(foreman2_queryset.values_list('estimate_id', flat=True))
        
        print(f"   –ü—Ä–æ—Ä–∞–± 2 –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å: {foreman2_estimates}")
        print(f"   –ü—Ä–æ—Ä–∞–± 2 –≤–∏–¥–∏—Ç —á–µ—Ä–µ–∑ queryset: {foreman2_visible}")
        
        unexpected_access = [eid for eid in foreman2_visible if eid not in foreman2_estimates]
        missing_access = [eid for eid in foreman2_estimates if eid not in foreman2_visible]
        
        if unexpected_access:
            print(f"   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –£–Ø–ó–í–ò–ú–û–°–¢–¨: –í–∏–¥–∏—Ç —á—É–∂–∏–µ —Å–º–µ—Ç—ã: {unexpected_access}")
            return False
            
        if missing_access:
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: –ù–ï –≤–∏–¥–∏—Ç —Å–≤–æ–∏ —Å–º–µ—Ç—ã: {missing_access}")
            return False
            
        print("   ‚úÖ –ü—Ä–æ—Ä–∞–± 2 –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ —Å–º–µ—Ç—ã")
        print()
        
        # –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ get_queryset –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        print("üß™ –¢–ï–°–¢ 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è queryset –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
        request.user = manager
        view.request = request
        
        manager_queryset = view.get_queryset()
        manager_visible = list(manager_queryset.values_list('estimate_id', flat=True))
        
        print(f"   –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –≤—Å–µ: {len(all_estimates)} —Å–º–µ—Ç")
        print(f"   –ú–µ–Ω–µ–¥–∂–µ—Ä –≤–∏–¥–∏—Ç —á–µ—Ä–µ–∑ queryset: {len(manager_visible)} —Å–º–µ—Ç")
        
        if set(manager_visible) != set(all_estimates):
            missing = set(all_estimates) - set(manager_visible)
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: –ú–µ–Ω–µ–¥–∂–µ—Ä –ù–ï –≤–∏–¥–∏—Ç —Å–º–µ—Ç—ã: {missing}")
            return False
            
        print("   ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –≤–∏–¥–∏—Ç –≤—Å–µ —Å–º–µ—Ç—ã")
        print()
        
        # –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –æ–±—ä–µ–∫—Ç–∞
        print("üß™ –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –æ–±—ä–µ–∫—Ç–∞")
        
        if foreman2_estimates:
            foreign_estimate_id = foreman2_estimates[0]
            foreign_estimate = Estimate.objects.get(estimate_id=foreign_estimate_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º permission class
            from api.permissions import CanAccessEstimate
            permission = CanAccessEstimate()
            
            # –ü—Ä–æ—Ä–∞–± 1 –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–º–µ—Ç–µ –ø—Ä–æ—Ä–∞–±–∞ 2
            request.user = foreman1
            has_permission = permission.has_object_permission(request, None, foreign_estimate)
            
            if has_permission:
                print(f"   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –£–Ø–ó–í–ò–ú–û–°–¢–¨: –ü—Ä–æ—Ä–∞–± 1 –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Å–º–µ—Ç–µ –ø—Ä–æ—Ä–∞–±–∞ 2 (ID: {foreign_estimate_id})")
                return False
            else:
                print(f"   ‚úÖ –ü—Ä–æ—Ä–∞–± 1 –ù–ï –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–º–µ—Ç–µ –ø—Ä–æ—Ä–∞–±–∞ 2 (ID: {foreign_estimate_id})")
                
            # –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ª—é–±–æ–π —Å–º–µ—Ç–µ
            request.user = manager
            has_permission = permission.has_object_permission(request, None, foreign_estimate)
            
            if not has_permission:
                print(f"   ‚ùå –û–®–ò–ë–ö–ê: –ú–µ–Ω–µ–¥–∂–µ—Ä –ù–ï –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–º–µ—Ç–µ (ID: {foreign_estimate_id})")
                return False
            else:
                print(f"   ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ª—é–±–æ–π —Å–º–µ—Ç–µ")
        
        print()
        
        # –¢–ï–°–¢ 5: –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("üß™ –¢–ï–°–¢ 5: –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ä–∞–±—ã –ù–ï –≤–∏–¥—è—Ç —Å–º–µ—Ç—ã –¥—Ä—É–≥ –¥—Ä—É–≥–∞
        common_estimates = set(foreman1_estimates) & set(foreman2_estimates)
        if common_estimates:
            print(f"   ‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –û–±—â–∏–µ —Å–º–µ—Ç—ã –º–µ–∂–¥—É –ø—Ä–æ—Ä–∞–±–∞–º–∏: {common_estimates}")
        else:
            print("   ‚úÖ –ü—Ä–æ—Ä–∞–±—ã –Ω–µ –∏–º–µ—é—Ç –æ–±—â–∏—Ö —Å–º–µ—Ç")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω–æ—Ç—É –ø–æ–∫—Ä—ã—Ç–∏—è
        foreman_estimates_total = set(foreman1_estimates) | set(foreman2_estimates)
        manager_only_estimates = set(all_estimates) - foreman_estimates_total
        
        if manager_only_estimates:
            print(f"   ‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: –°–º–µ—Ç—ã —Ç–æ–ª—å–∫–æ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {len(manager_only_estimates)}")
        
        print()
        print("üîí –í–°–ï –¢–ï–°–¢–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
        print("‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö")
        return True
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ï: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_direct_access_security()
    sys.exit(0 if success else 1)