#!/usr/bin/env python3
"""
–ñ–∏–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSE —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ä–µ–∞–ª—å–Ω–æ–π —Å–º–µ—Ç—ã
"""
import os
import sys
import django
import time
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from api.models import User, Estimate, Project, Status, AuthToken
from api.sse_views import sse_manager
import requests
import json

def listen_sse(token_str):
    """–°–ª—É—à–∞–µ–º SSE —Å–æ–±—ã—Ç–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    sse_url = f'http://localhost:8000/api/v1/sse/events/?token={token_str}'
    print(f"üéß –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SSE: {sse_url[:50]}...")
    
    try:
        headers = {'Accept': 'text/event-stream', 'Cache-Control': 'no-cache'}
        response = requests.get(sse_url, headers=headers, stream=True, timeout=30)
        
        if response.status_code == 200:
            print("‚úÖ SSE –ø–æ–¥–∫–ª—é—á–µ–Ω, —Å–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è...")
            for line in response.iter_lines():
                if line:
                    decoded_line = line.decode('utf-8')
                    if decoded_line.startswith('data: '):
                        try:
                            data = json.loads(decoded_line[6:])
                            if data.get('event') != 'keepalive':
                                print(f"üì® SSE –°–æ–±—ã—Ç–∏–µ: {data.get('event')} - {data}")
                        except json.JSONDecodeError:
                            pass
    except Exception as e:
        print(f"‚ùå SSE –æ—à–∏–±–∫–∞: {e}")

def test_sse_with_estimate():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º SSE —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ä–µ–∞–ª—å–Ω–æ–π —Å–º–µ—Ç—ã"""
    
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSE —Å —Ä–µ–∞–ª—å–Ω–æ–π —Å–º–µ—Ç–æ–π ===\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        # –ú–µ–Ω–µ–¥–∂–µ—Ä –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç—å —Å–æ–±—ã—Ç–∏—è
        manager = User.objects.get(email='manager@example.com')
        manager_token = AuthToken.objects.filter(user=manager).first()
        
        # –ü—Ä–æ—Ä–∞–± –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–º–µ—Ç—É
        foreman = User.objects.get(email='foreman@example.com')
        
        print(f"üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä: {manager.email} (ID: {manager.user_id})")
        print(f"üë∑ –ü—Ä–æ—Ä–∞–±: {foreman.email} (ID: {foreman.user_id})")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º SSE listener –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        if manager_token:
            listener_thread = threading.Thread(
                target=listen_sse, 
                args=(str(manager_token.token),),
                daemon=True
            )
            listener_thread.start()
            print("üéß SSE listener –∑–∞–ø—É—â–µ–Ω –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞\n")
            
            # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            time.sleep(2)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        stats = sse_manager.get_stats()
        print(f"üìä SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ—Ç—ã:")
        print(f"   –í—Å–µ–≥–æ: {stats['total_connections']}")
        if stats['users']:
            for user_id, connections in stats['users'].items():
                try:
                    user = User.objects.get(user_id=user_id)
                    print(f"   - {user.email}: {connections} –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")
                except:
                    pass
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–º–µ—Ç—É –æ—Ç –∏–º–µ–Ω–∏ –ø—Ä–æ—Ä–∞–±–∞
        project = Project.objects.first()
        status = Status.objects.filter(status_name='–ß–µ—Ä–Ω–æ–≤–∏–∫').first()
        
        if project and status:
            print(f"\nüìù –°–æ–∑–¥–∞–µ–º —Å–º–µ—Ç—É –æ—Ç –∏–º–µ–Ω–∏ –ø—Ä–æ—Ä–∞–±–∞...")
            print(f"   –ü—Ä–æ–µ–∫—Ç: {project.project_name}")
            print(f"   –°—Ç–∞—Ç—É—Å: {status.status_name}")
            
            # –°–æ–∑–¥–∞–µ–º —Å–º–µ—Ç—É
            estimate = Estimate.objects.create(
                project=project,
                estimate_number=f"SSE_Live_Test_{int(time.time())}",
                creator=foreman,
                foreman=foreman,
                status=status
            )
            
            print(f"‚úÖ –°–º–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞: {estimate.estimate_number}")
            print(f"   ID: {estimate.estimate_id}")
            
            # –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è
            print("\n‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ SSE —Å–æ–±—ã—Ç–∏–π...")
            time.sleep(3)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
            stats_after = sse_manager.get_stats()
            print(f"\nüìä SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ—Ç—ã:")
            print(f"   –í—Å–µ–≥–æ: {stats_after['total_connections']}")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–º–µ—Ç—É
            print(f"\nüóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–º–µ—Ç—É...")
            estimate.delete()
            print("‚úÖ –°–º–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞")
            
            # –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è —É–¥–∞–ª–µ–Ω–∏—è
            time.sleep(2)
            
    except User.DoesNotExist as e:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_sse_with_estimate()
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")