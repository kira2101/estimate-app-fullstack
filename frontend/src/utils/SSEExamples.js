/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è SSE —Å Event Bus —Å–∏—Å—Ç–µ–º–æ–π
 * –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 */

import eventBus from './EventBus';
import { ESTIMATE_EVENTS, PROJECT_EVENTS, createEvent } from './EventTypes';

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SSE
 */
export class SSEDemo {
  constructor() {
    this.isListening = false;
    this.listeners = [];
  }

  /**
   * –ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –∏–∑ SSE
   */
  startListening() {
    if (this.isListening) return;

    console.log('üéØ [SSE_DEMO] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ SSE —Å–æ–±—ã—Ç–∏–π...');

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è —Å–º–µ—Ç
    const estimateCreatedListener = (eventData) => {
      console.log('üìã [SSE_DEMO] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ—Ç—ã:', eventData);
      this.showNotification('–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–º–µ—Ç–∞', eventData);
    };

    const estimateUpdatedListener = (eventData) => {
      console.log('üìù [SSE_DEMO] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–º–µ—Ç—ã:', eventData);
      this.showNotification('–°–º–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞', eventData);
    };

    const estimateDeletedListener = (eventData) => {
      console.log('üóëÔ∏è [SSE_DEMO] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–º–µ—Ç—ã:', eventData);
      this.showNotification('–°–º–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞', eventData);
    };

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    const projectCreatedListener = (eventData) => {
      console.log('üèóÔ∏è [SSE_DEMO] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:', eventData);
      this.showNotification('–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç', eventData);
    };

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    const connectionLostListener = (eventData) => {
      console.warn('üî¥ [SSE_DEMO] –ü–æ—Ç–µ—Ä—è–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ:', eventData);
      this.showNotification('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ', eventData, 'warning');
    };

    const connectionRestoredListener = (eventData) => {
      console.log('üü¢ [SSE_DEMO] –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', eventData);
      this.showNotification('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', eventData, 'success');
    };

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    eventBus.subscribe(ESTIMATE_EVENTS.CREATED, 'sse-demo', estimateCreatedListener);
    eventBus.subscribe(ESTIMATE_EVENTS.UPDATED, 'sse-demo', estimateUpdatedListener);
    eventBus.subscribe(ESTIMATE_EVENTS.DELETED, 'sse-demo', estimateDeletedListener);
    eventBus.subscribe(PROJECT_EVENTS.CREATED, 'sse-demo', projectCreatedListener);
    eventBus.subscribe('system.connectionLost', 'sse-demo', connectionLostListener);
    eventBus.subscribe('system.connectionRestored', 'sse-demo', connectionRestoredListener);

    this.isListening = true;
    console.log('‚úÖ [SSE_DEMO] –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ');
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
   */
  stopListening() {
    if (!this.isListening) return;

    eventBus.unsubscribeAll('sse-demo');
    this.isListening = false;
    console.log('‚èπÔ∏è [SSE_DEMO] –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏
   */
  showNotification(title, eventData, type = 'info') {
    // –í –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (typeof window !== 'undefined' && 'Notification' in window) {
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      if (Notification.permission === 'granted') {
        const notification = new Notification(title, {
          body: this.formatEventMessage(eventData),
          icon: '/favicon.ico',
          tag: 'sse-demo'
        });

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => notification.close(), 5000);
      } else if (Notification.permission !== 'denied') {
        Notification.requestPermission().then((permission) => {
          if (permission === 'granted') {
            this.showNotification(title, eventData, type);
          }
        });
      }
    }

    // –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
    const emoji = type === 'success' ? '‚úÖ' : type === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è';
    console.log(`${emoji} [SSE_DEMO] ${title}:`, eventData);
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  formatEventMessage(eventData) {
    if (eventData.data) {
      const data = eventData.data;
      if (data.estimate_number) {
        return `–°–º–µ—Ç–∞: ${data.estimate_number} (–ü—Ä–æ–µ–∫—Ç: ${data.project_name || '–ù–µ —É–∫–∞–∑–∞–Ω'})`;
      }
      if (data.project_name) {
        return `–ü—Ä–æ–µ–∫—Ç: ${data.project_name}`;
      }
    }
    return '–ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã';
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–µ–º–æ
   */
  getStatus() {
    return {
      isListening: this.isListening,
      eventBusStats: eventBus.getStats()
    };
  }
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SSE –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
 */
export const SSETestUtils = {
  /**
   * –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å–º–µ—Ç—ã
   */
  createTestEstimateEvent(type = ESTIMATE_EVENTS.CREATED) {
    const testEvent = createEvent(type, {
      estimate_id: Math.floor(Math.random() * 1000),
      estimate_number: `–¢–µ—Å—Ç_${new Date().getTime()}`,
      project_id: 1,
      project_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç',
      foreman_id: 1,
      foreman_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ä–∞–±',
      status: '–ß–µ—Ä–Ω–æ–≤–∏–∫'
    }, {
      source: 'test',
      userId: 999,
      userRole: '–º–µ–Ω–µ–¥–∂–µ—Ä'
    });

    console.log('üß™ [SSE_TEST] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ:', testEvent);
    eventBus.emit(type, testEvent);
    return testEvent;
  },

  /**
   * –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
   */
  createTestProjectEvent(type = PROJECT_EVENTS.CREATED) {
    const testEvent = createEvent(type, {
      project_id: Math.floor(Math.random() * 1000),
      project_name: `–¢–µ—Å—Ç–æ–≤—ã–π_–ø—Ä–æ–µ–∫—Ç_${new Date().getTime()}`,
      address: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
      description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞'
    }, {
      source: 'test',
      userId: 999,
      userRole: '–º–µ–Ω–µ–¥–∂–µ—Ä'
    });

    console.log('üß™ [SSE_TEST] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:', testEvent);
    eventBus.emit(type, testEvent);
    return testEvent;
  },

  /**
   * –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
   */
  runTestSequence(intervalMs = 3000) {
    console.log('üß™ [SSE_TEST] –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π...');
    
    const events = [
      () => this.createTestEstimateEvent(ESTIMATE_EVENTS.CREATED),
      () => this.createTestProjectEvent(PROJECT_EVENTS.CREATED),
      () => this.createTestEstimateEvent(ESTIMATE_EVENTS.UPDATED),
      () => this.createTestEstimateEvent(ESTIMATE_EVENTS.DELETED),
    ];

    events.forEach((eventFn, index) => {
      setTimeout(() => {
        console.log(`üß™ [SSE_TEST] –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç ${index + 1}/${events.length}`);
        eventFn();
      }, index * intervalMs);
    });

    console.log(`üß™ [SSE_TEST] –°–µ—Ä–∏—è –∏–∑ ${events.length} —Å–æ–±—ã—Ç–∏–π –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º ${intervalMs}–º—Å`);
  }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
  window.SSEDemo = SSEDemo;
  window.SSETestUtils = SSETestUtils;
  console.log('üß™ [SSE_EXAMPLES] –î–æ—Å—Ç—É–ø–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: SSEDemo, SSETestUtils');
}