/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç
 * –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ä–∞–±–æ—Ç
 */

import { normalizeWork, normalizeWorksData, mergeWorksArrays } from './dataUtils.js';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ API
const testWorkFromAPI = {
  "work_type_id": 501,
  "work_name": "–î–µ–º–æ–Ω—Ç–∞–∂ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞ –∫–∞–Ω–∞–ª—å–Ω–æ–≥–æ",
  "unit_of_measurement": "—à—Ç",
  "category": {
    "category_id": 26,
    "category_name": "–í–µ–Ω—Ç–∏–ª—è—Ü—ñ—è"
  },
  "prices": {
    "cost_price": "150.00",
    "client_price": "200.00"
  }
};

console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï normalizeWork:');
console.log('–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API:', testWorkFromAPI);

const normalizedWork = normalizeWork(testWorkFromAPI);
console.log('–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞:', normalizedWork);

console.log('\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï mergeWorksArrays:');

const existingWorks = [normalizedWork];
const newWorks = [{
  ...testWorkFromAPI,
  quantity: 2
}];

console.log('–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–±–æ—Ç—ã:', existingWorks.length);
console.log('–ù–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã:', newWorks.length);

const mergedWorks = mergeWorksArrays(existingWorks, newWorks);
console.log('–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã:', mergedWorks);
console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è:', mergedWorks[0]?.quantity);

export { testWorkFromAPI, normalizedWork, mergedWorks };