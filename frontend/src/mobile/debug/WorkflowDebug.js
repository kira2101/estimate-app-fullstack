/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ workflow —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ—Ç
 * –ü–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–¥–∏—Ç—å –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö: WorkSelection -> Navigation Context -> EstimateSummary
 */

/**
 * –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ workflow
 */
export const enableWorkflowDebug = () => {
  console.log('üêû WorkflowDebug: –í–∫–ª—é—á–µ–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ workflow');
  
  // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º console.log –¥–ª—è –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º–æ–≥–æ –≤—ã–≤–æ–¥–∞
  const originalLog = console.log;
  console.log = (...args) => {
    if (args[0] && typeof args[0] === 'string' && args[0].includes('üîß')) {
      originalLog('='.repeat(60));
      originalLog(...args);
      if (args[1] && typeof args[1] === 'object') {
        originalLog('–î–µ—Ç–∞–ª–∏:', JSON.stringify(args[1], null, 2));
      }
      originalLog('='.repeat(60));
    } else {
      originalLog(...args);
    }
  };
};

/**
 * –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */
export const createTestWorks = () => {
  return [
    {
      id: 1,
      work_type_id: 1,
      name: '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ 1',
      work_name: '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ 1',
      unit: '–º¬≤',
      unit_of_measurement: '–º¬≤',
      quantity: 10,
      cost_price: 100,
      client_price: 150,
      category_id: 1
    },
    {
      id: 2,
      work_type_id: 2,
      name: '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ 2',
      work_name: '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ 2',
      unit: '—à—Ç',
      unit_of_measurement: '—à—Ç',
      quantity: 5,
      cost_price: 50,
      client_price: 75,
      category_id: 1
    }
  ];
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ workflow
 */
export const validateWorkflowData = (stage, data) => {
  console.log(`üîç WorkflowDebug: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —ç—Ç–∞–ø–µ "${stage}"`);
  
  if (!data) {
    console.error(`‚ùå –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞ —ç—Ç–∞–ø–µ "${stage}"`);
    return false;
  }
  
  if (stage === 'work-selection') {
    const isValid = Array.isArray(data) && data.length > 0 && 
                   data.every(work => work.id || work.work_type_id);
    console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç –≤ WorkSelection: ${isValid ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
    return isValid;
  }
  
  if (stage === 'navigation-context') {
    const isValid = data.selectedWorks && Array.isArray(data.selectedWorks);
    console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Navigation Context: ${isValid ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
    return isValid;
  }
  
  if (stage === 'estimate-summary') {
    const isValid = Array.isArray(data) && data.every(work => 
      (work.id || work.work_type_id) && (work.name || work.work_name)
    );
    console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç –≤ EstimateSummary: ${isValid ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
    return isValid;
  }
  
  return true;
};

/**
 * –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –ø–æ—Ç–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö
 */
export const traceDataFlow = (from, to, data) => {
  console.log(`üìä WorkflowDebug: –ü–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö ${from} ‚Üí ${to}`);
  console.log('–î–∞–Ω–Ω—ã–µ:', {
    type: Array.isArray(data) ? 'Array' : typeof data,
    count: Array.isArray(data) ? data.length : 'N/A',
    keys: typeof data === 'object' && data ? Object.keys(data) : 'N/A'
  });
  
  if (Array.isArray(data) && data.length > 0) {
    console.log('–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç:', data[0]);
  }
};

/**
 * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
 */
export const monitorStateChanges = (componentName, prevState, newState) => {
  console.log(`üîÑ WorkflowDebug: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ ${componentName}`);
  console.log('–ë—ã–ª–æ:', prevState);
  console.log('–°—Ç–∞–ª–æ:', newState);
  
  if (Array.isArray(prevState) && Array.isArray(newState)) {
    const diff = newState.length - prevState.length;
    console.log(`–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${diff > 0 ? '+' : ''}${diff}`);
  }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ª–∞–¥–∫–∏ –≤ dev —Ä–µ–∂–∏–º–µ
if (import.meta.env.DEV) {
  enableWorkflowDebug();
}