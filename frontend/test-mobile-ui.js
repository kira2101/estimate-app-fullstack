import { chromium } from 'playwright';

async function testMobileUI() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
  
  const browser = await chromium.launch({ 
    headless: true, // Headless —Ä–µ–∂–∏–º –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —Å—Ä–µ–¥—ã
    slowMo: 100 // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  });
  
  const context = await browser.newContext({
    // –≠–º—É–ª—è—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    viewport: { width: 375, height: 667 },
    userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) AppleWebKit/605.1.15'
  });
  
  const page = await context.newPage();
  
  try {
    // 1. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º http://localhost:5173');
    await page.goto('http://localhost:5173');
    await page.waitForTimeout(2000);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω
    const isMobileActive = await page.locator('.mobile-app').count() > 0;
    console.log('üì± –ú–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω:', isMobileActive);
    
    if (!isMobileActive) {
      console.log('‚ùå –ú–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –ø—Ä–æ—Ä–∞–±');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const loginForm = await page.locator('form').first();
      if (await loginForm.count() > 0) {
        console.log('üîë –ù–∞–π–¥–µ–Ω–∞ —Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –∫–∞–∫ –ø—Ä–æ—Ä–∞–±...');
        
        await page.fill('input[type="email"]', 'foreman@example.com');
        await page.fill('input[type="password"]', 'password123');
        await page.click('button[type="submit"]');
        
        await page.waitForTimeout(3000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const isMobileActiveAfterLogin = await page.locator('.mobile-app').count() > 0;
        console.log('üì± –ú–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', isMobileActiveAfterLogin);
      }
    }
    
    // 3. –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ–µ–∫—Ç—É
    console.log('üèóÔ∏è –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç—ã...');
    const projectCards = await page.locator('.project-card, .mobile-card').all();
    console.log('üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤:', projectCards.length);
    
    if (projectCards.length > 0) {
      console.log('‚ñ∂Ô∏è –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É –ø—Ä–æ–µ–∫—Ç—É');
      await projectCards[0].click();
      await page.waitForTimeout(2000);
      
      // 4. –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–º–µ—Ç—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      console.log('üìä –ò—â–µ–º —Å–º–µ—Ç—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
      const estimateCards = await page.locator('.estimate-card, .mobile-list-item').all();
      console.log('üìã –ù–∞–π–¥–µ–Ω–æ —Å–º–µ—Ç:', estimateCards.length);
      
      if (estimateCards.length > 0) {
        // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é —Å–º–µ—Ç—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await estimateCards[0].click();
        await page.waitForTimeout(2000);
        
        // 5. –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—ã" –∏–ª–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
        console.log('üîß –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç...');
        const addWorksBtn = await page.locator('button:has-text("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—ã"), button:has-text("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")').first();
        
        if (await addWorksBtn.count() > 0) {
          await addWorksBtn.click();
          await page.waitForTimeout(2000);
          
          // 6. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é
          console.log('üìÇ –í—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞–±–æ—Ç...');
          const categoryCards = await page.locator('.category-card, .mobile-list-item').all();
          
          if (categoryCards.length > 0) {
            await categoryCards[0].click();
            await page.waitForTimeout(2000);
            
            // 7. –¢–ï–°–¢–ò–†–£–ï–ú –û–°–ù–û–í–ù–£–Æ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨: —Ä–∞–±–æ—Ç–∞ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏
            console.log('üéØ –¢–ï–°–¢–ò–†–£–ï–ú: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —á–µ–∫–±–æ–∫—Å–æ–≤ —Ä–∞–±–æ—Ç');
            
            const workCards = await page.locator('.work-card').all();
            console.log('üìã –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞–±–æ—Ç:', workCards.length);
            
            if (workCards.length > 0) {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é —Ä–∞–±–æ—Ç—É
              const firstWorkCard = workCards[0];
              const workName = await firstWorkCard.locator('.work-card-title, .work-name').first().textContent();
              console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É:', workName?.trim());
              
              const checkbox = firstWorkCard.locator('.work-card-checkbox .checkbox').first();
              const isInitiallySelected = await checkbox.evaluate(el => el.classList.contains('checked'));
              console.log('‚úÖ –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–∞:', isInitiallySelected);
              
              if (isInitiallySelected) {
                console.log('üîÑ –°–Ω–∏–º–∞–µ–º —á–µ–∫–±–æ–∫—Å (—Ç–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ)...');
                await checkbox.click();
                await page.waitForTimeout(1000);
                
                const isDeselected = await checkbox.evaluate(el => !el.classList.contains('checked'));
                console.log('‚ùå –ß–µ–∫–±–æ–∫—Å —Å–Ω—è—Ç:', isDeselected);
                
                if (isDeselected) {
                  console.log('‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ —á–µ–∫–±–æ–∫—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!');
                  
                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞–±–æ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ navigation context
                  console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ–∫–±–æ–∫—Å –æ–±—Ä–∞—Ç–Ω–æ...');
                  await checkbox.click();
                  await page.waitForTimeout(1000);
                  
                  const isReselected = await checkbox.evaluate(el => el.classList.contains('checked'));
                  console.log('‚úÖ –ß–µ–∫–±–æ–∫—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –æ–±—Ä–∞—Ç–Ω–æ:', isReselected);
                }
              } else {
                console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ–∫–±–æ–∫—Å (—Ç–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ)...');
                await checkbox.click();
                await page.waitForTimeout(1000);
                
                const isSelected = await checkbox.evaluate(el => el.classList.contains('checked'));
                console.log('‚úÖ –ß–µ–∫–±–æ–∫—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', isSelected);
                
                if (isSelected) {
                  console.log('‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ —á–µ–∫–±–æ–∫—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!');
                }
              }
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç
              console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã...');
              for (let i = 1; i < Math.min(workCards.length, 3); i++) {
                const workCard = workCards[i];
                const workTitle = await workCard.locator('.work-card-title, .work-name').first().textContent();
                const cardCheckbox = workCard.locator('.work-card-checkbox .checkbox').first();
                
                console.log(`üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É ${i + 1}: ${workTitle?.trim()}`);
                
                const wasSelected = await cardCheckbox.evaluate(el => el.classList.contains('checked'));
                await cardCheckbox.click();
                await page.waitForTimeout(500);
                
                const isNowSelected = await cardCheckbox.evaluate(el => el.classList.contains('checked'));
                const testResult = wasSelected !== isNowSelected;
                
                console.log(`${testResult ? '‚úÖ' : '‚ùå'} –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã ${i + 1}: ${wasSelected ? '—Å–Ω—è—Ç' : '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'} ‚Üí ${isNowSelected ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '—Å–Ω—è—Ç'}`);
              }
            }
          }
        }
      }
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  } finally {
    await browser.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testMobileUI().catch(console.error);