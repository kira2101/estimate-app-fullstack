name: üöÄ –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π Dev –æ–∫—Ä—É–∂–µ–Ω–∏—è

on:
  push:
    branches: [ dev ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: '–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–æ–∫'
        required: false
        default: false
        type: boolean

env:
  SERVER_HOST: 195.14.122.135
  DEV_PROJECT_PATH: /var/www/estimate-app-dev
  DEV_BACKEND_PORT: 8001
  DEV_FRONTEND_PORT: 3001

jobs:
  quick-deploy-dev:
    name: üì¶ –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –≤ Dev
    runs-on: ubuntu-latest
    
    steps:
    - name: üîç Checkout –∫–æ–¥–∞
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}

    - name: üåê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –≤ known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ env.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: üìã –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
      id: changes
      run: |
        echo "–ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–µ–∂–¥—É –∫–æ–º–º–∏—Ç–∞–º–∏..."
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD || echo "")
        echo "changed_files<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π
        BACKEND_CHANGED=false
        FRONTEND_CHANGED=false
        MIGRATIONS_CHANGED=false
        
        if echo "$CHANGED_FILES" | grep -E '\.(py|txt)$'; then
          BACKEND_CHANGED=true
        fi
        
        if echo "$CHANGED_FILES" | grep -E '\.(js|jsx|ts|tsx|json|css|html)$'; then
          FRONTEND_CHANGED=true
        fi
        
        if echo "$CHANGED_FILES" | grep -E 'migrations/'; then
          MIGRATIONS_CHANGED=true
        fi
        
        echo "backend_changed=$BACKEND_CHANGED" >> $GITHUB_OUTPUT
        echo "frontend_changed=$FRONTEND_CHANGED" >> $GITHUB_OUTPUT
        echo "migrations_changed=$MIGRATIONS_CHANGED" >> $GITHUB_OUTPUT
        
        echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
        echo "Backend: $BACKEND_CHANGED"
        echo "Frontend: $FRONTEND_CHANGED" 
        echo "Migrations: $MIGRATIONS_CHANGED"

    - name: üöÄ –î–µ–ø–ª–æ–π –Ω–∞ dev —Å–µ—Ä–≤–µ—Ä
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ env.SERVER_HOST }} << 'ENDSSH'
          set -e
          
          # –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
          RED='\033[0;31m'
          GREEN='\033[0;32m'
          YELLOW='\033[1;33m'
          BLUE='\033[0;34m'
          NC='\033[0m'
          
          log() {
            echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
          }
          
          success() {
            echo -e "${GREEN}[SUCCESS]${NC} $1"
          }
          
          error() {
            echo -e "${RED}[ERROR]${NC} $1"
            exit 1
          }
          
          log "üöÄ –ù–∞—á–∞–ª–æ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è dev –æ–∫—Ä—É–∂–µ–Ω–∏—è"
          
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd ${{ env.DEV_PROJECT_PATH }}
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          log "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:"
          git status --short || true
          git log --oneline -3 || true
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º pull
          log "üì• –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ –≤–µ—Ç–∫–∏ dev..."
          git fetch origin dev
          git reset --hard origin/dev
          success "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞"
          
          # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          log "üê≥ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          
          # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          log "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          docker stop estimate-backend-dev estimate-frontend-dev 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
          docker rm estimate-backend-dev estimate-frontend-dev 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ —É–¥–∞–ª–µ–Ω—ã"
          
          # –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ backend –æ–±—Ä–∞–∑–∞
          log "üî® –°–±–æ—Ä–∫–∞ backend –æ–±—Ä–∞–∑–∞..."
          docker build -t estimate-app-backend:dev-new ./backend/ || error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ backend –æ–±—Ä–∞–∑–∞"
          success "Backend –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"
          
          # –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ frontend –æ–±—Ä–∞–∑–∞  
          log "üé® –°–±–æ—Ä–∫–∞ frontend –æ–±—Ä–∞–∑–∞..."
          docker build -t estimate-app-frontend:dev-new ./frontend/ \
            --build-arg VITE_API_BASE_URL=https://dev.app.iqbs.pro/api/v1 || error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend –æ–±—Ä–∞–∑–∞"
          success "Frontend –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"
          
          # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          mkdir -p /var/www/estimate-app-dev/logs
          
          # –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ç–µ–º–∏ –∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
          log "üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
          docker run -d --name estimate-backend-dev \
            --restart unless-stopped \
            --network bridge \
            -p ${{ env.DEV_BACKEND_PORT }}:8000 \
            -v /var/www/estimate-app-dev/logs:/app/logs \
            -e SECRET_KEY=dev-secret-key-for-testing \
            -e DATABASE_URL=postgresql://estimate_user:secure_password_123@host.docker.internal:5432/estimate_app_db \
            -e ALLOWED_HOSTS=dev.app.iqbs.pro,localhost,127.0.0.1 \
            -e CORS_ALLOWED_ORIGINS=https://dev.app.iqbs.pro,http://dev.app.iqbs.pro \
            -e CSRF_TRUSTED_ORIGINS=https://dev.app.iqbs.pro,http://dev.app.iqbs.pro \
            -e SSL_ENABLED=True \
            -e VITE_API_BASE_URL=https://dev.app.iqbs.pro/api/v1 \
            -e DJANGO_SETTINGS_MODULE=core.settings_production \
            --add-host=host.docker.internal:host-gateway \
            estimate-app-backend:dev-new || error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
          success "Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
          
          # –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
          log "üåê –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
          docker run -d --name estimate-frontend-dev \
            --restart unless-stopped \
            --network bridge \
            -p ${{ env.DEV_FRONTEND_PORT }}:80 \
            estimate-app-frontend:dev-new || error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
          success "Frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
          
          # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
          log "üè∑Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –æ–±—Ä–∞–∑–æ–≤..."
          docker tag estimate-app-backend:dev-new estimate-app-backend:dev || true
          docker tag estimate-app-frontend:dev-new estimate-app-frontend:dev-fix || true
          
          # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Nginx –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞
          log "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Nginx..."
          sudo nginx -s reload || error "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ Nginx"
          success "Nginx –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
          
          # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
          log "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
          docker image prune -f || true
          
          # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (45 —Å–µ–∫)..."
          sleep 45
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
          if docker ps | grep -q "estimate-backend-dev.*Up"; then
            success "‚úÖ Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
          else
            error "‚ùå Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            docker logs estimate-backend-dev --tail 20 || true
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞  
          if docker ps | grep -q "estimate-frontend-dev.*Up"; then
            success "‚úÖ Frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
          else
            error "‚ùå Frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            docker logs estimate-frontend-dev --tail 20 || true
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ health check backend
          log "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health check backend..."
          for i in {1..10}; do
            if docker exec estimate-backend-dev curl -f -s http://localhost:8000/api/v1/health/ > /dev/null 2>&1; then
              success "‚úÖ Backend health check –ø—Ä–æ—à–µ–ª"
              break
            fi
            if [ $i -eq 10 ]; then
              error "‚ùå Backend health check –Ω–µ –ø—Ä–æ—à–µ–ª –ø–æ—Å–ª–µ 10 –ø–æ–ø—ã—Ç–æ–∫"
              docker logs estimate-backend-dev --tail 30 || true
            fi
            sleep 3
          done
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ –ø–æ—Ä—Ç—ã
          if curl -f -s http://localhost:${{ env.DEV_BACKEND_PORT }}/api/v1/health/ > /dev/null; then
            success "‚úÖ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:${{ env.DEV_BACKEND_PORT }}"
          else
            error "‚ùå Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:${{ env.DEV_BACKEND_PORT }}"
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –¥–æ–º–µ–Ω
          if curl -f -s https://dev.app.iqbs.pro/api/v1/health/ > /dev/null; then
            success "‚úÖ Dev API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://dev.app.iqbs.pro"
          else
            error "‚ùå Dev API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –¥–æ–º–µ–Ω"
          fi
          
          # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          log "üîç –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
          docker ps | grep -E "(estimate-backend-dev|estimate-frontend-dev)" || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
          
          log "üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
          docker stats --no-stream estimate-backend-dev estimate-frontend-dev || true
          
          success "üéâ –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π dev –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
          echo ""
          echo "üìç Dev –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ:"
          echo "   üåê Web: https://dev.app.iqbs.pro" 
          echo "   üîå API: https://dev.app.iqbs.pro/api/v1/"
          echo "   üìä Backend: http://localhost:${{ env.DEV_BACKEND_PORT }}"
        ENDSSH

    - name: üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ—è
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ dev –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ API health endpoint
        if curl -f -s https://dev.app.iqbs.pro/api/v1/health/ | grep -q "healthy"; then
          echo "‚úÖ Dev API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        else
          echo "‚ùå Dev API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
          exit 1
        fi
        
        echo "üéâ –î–µ–ø–ª–æ–π dev –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        echo ""
        echo "üìç –î–µ–ø–ª–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
        echo "   üåê URL: https://dev.app.iqbs.pro"
        echo "   üîó API: https://dev.app.iqbs.pro/api/v1/"
        echo "   üìÖ –í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S UTC')"
        echo "   üöÄ –ö–æ–º–º–∏—Ç: ${{ github.sha }}"
        echo "   üë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}"

    - name: üìä –û—Ç—á–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
      if: always()
      run: |
        echo "üìã –û—Ç—á–µ—Ç –æ –¥–µ–ø–ª–æ–µ:"
        echo "–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        echo "${{ steps.changes.outputs.changed_files }}"
        echo ""
        echo "–¢–∏–ø—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
        echo "  Backend: ${{ steps.changes.outputs.backend_changed }}"
        echo "  Frontend: ${{ steps.changes.outputs.frontend_changed }}"
        echo "  Migrations: ${{ steps.changes.outputs.migrations_changed }}"