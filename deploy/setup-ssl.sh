#!/bin/bash

# =============================================================================
# SSL Certificate Setup Script for app.iqbs.pro
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é Let's Encrypt
# =============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
DOMAIN="app.iqbs.pro"
EMAIL="admin@iqbs.pro"
SSL_DIR="/var/www/estimate-app/ssl"
WEBROOT_DIR="/var/www/estimate-app/webroot"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# =============================================================================
# –§–£–ù–ö–¶–ò–ò
# =============================================================================

install_certbot() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot..."
    
    if command -v certbot &> /dev/null; then
        success "Certbot —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return
    fi
    
    if [ -f /etc/debian_version ]; then
        # Ubuntu/Debian
        apt-get update
        apt-get install -y certbot python3-certbot-nginx
    elif [ -f /etc/redhat-release ]; then
        # CentOS/RHEL
        yum install -y epel-release
        yum install -y certbot python3-certbot-nginx
    else
        error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
    fi
    
    success "Certbot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

setup_webroot() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webroot –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
    
    mkdir -p "$WEBROOT_DIR/.well-known/acme-challenge"
    chmod 755 "$WEBROOT_DIR"
    chmod 755 "$WEBROOT_DIR/.well-known"
    chmod 755 "$WEBROOT_DIR/.well-known/acme-challenge"
    
    success "Webroot –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

create_temp_nginx_config() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
    
    cat > /tmp/temp_nginx.conf << EOF
events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name $DOMAIN;
        
        location /.well-known/acme-challenge/ {
            root $WEBROOT_DIR;
            try_files \$uri =404;
        }
        
        location / {
            return 200 'SSL setup in progress...';
            add_header Content-Type text/plain;
        }
    }
}
EOF
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
    docker stop estimate-nginx 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ nginx
    docker run --name temp-nginx -d \
        -p 80:80 \
        -v /tmp/temp_nginx.conf:/etc/nginx/nginx.conf:ro \
        -v "$WEBROOT_DIR:$WEBROOT_DIR:ro" \
        nginx:alpine
    
    success "–í—Ä–µ–º–µ–Ω–Ω—ã–π Nginx –∑–∞–ø—É—â–µ–Ω"
}

obtain_certificate() {
    log "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è $DOMAIN..."
    
    certbot certonly \
        --webroot \
        --webroot-path="$WEBROOT_DIR" \
        --email="$EMAIL" \
        --agree-tos \
        --non-interactive \
        --domains="$DOMAIN" \
        --expand
    
    success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω"
}

copy_certificates() {
    log "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ SSL –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é..."
    
    mkdir -p "$SSL_DIR"
    
    cp "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" "$SSL_DIR/$DOMAIN.crt"
    cp "/etc/letsencrypt/live/$DOMAIN/privkey.pem" "$SSL_DIR/$DOMAIN.key"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    chmod 644 "$SSL_DIR/$DOMAIN.crt"
    chmod 600 "$SSL_DIR/$DOMAIN.key"
    
    success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
}

cleanup_temp_nginx() {
    log "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ Nginx..."
    
    docker stop temp-nginx 2>/dev/null || true
    docker rm temp-nginx 2>/dev/null || true
    rm -f /tmp/temp_nginx.conf
    
    success "–í—Ä–µ–º–µ–Ω–Ω—ã–π Nginx —É–¥–∞–ª–µ–Ω"
}

setup_certificate_renewal() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    cat > /usr/local/bin/renew-ssl.sh << EOF
#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤

certbot renew --quiet

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
if [ -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
    cp "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" "$SSL_DIR/$DOMAIN.crt"
    cp "/etc/letsencrypt/live/$DOMAIN/privkey.pem" "$SSL_DIR/$DOMAIN.key"
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx
    docker restart estimate-nginx 2>/dev/null || true
    
    echo "\$(date): SSL certificates renewed for $DOMAIN" >> /var/log/ssl-renewal.log
fi
EOF
    
    chmod +x /usr/local/bin/renew-ssl.sh
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ crontab
    (crontab -l 2>/dev/null; echo "0 3 * * * /usr/local/bin/renew-ssl.sh") | crontab -
    
    success "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
}

verify_certificate() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
    
    if [ -f "$SSL_DIR/$DOMAIN.crt" ] && [ -f "$SSL_DIR/$DOMAIN.key" ]; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        EXPIRY_DATE=$(openssl x509 -enddate -noout -in "$SSL_DIR/$DOMAIN.crt" | cut -d= -f2)
        success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: $EXPIRY_DATE"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–æ–º–µ–Ω–∞
        if openssl x509 -noout -text -in "$SSL_DIR/$DOMAIN.crt" | grep -q "$DOMAIN"; then
            success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è $DOMAIN"
        else
            error "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è $DOMAIN"
        fi
    else
        error "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# =============================================================================
# –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–°
# =============================================================================

main() {
    log "üîí –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL –¥–ª—è $DOMAIN"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    if [ "$EUID" -ne 0 ]; then
        error "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ DNS —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è $DOMAIN..."
    DOMAIN_IP=$(dig +short $DOMAIN | head -n1)
    SERVER_IP=$(curl -s ifconfig.me || curl -s ipinfo.io/ip)
    
    if [ "$DOMAIN_IP" != "$SERVER_IP" ]; then
        warning "DNS –∑–∞–ø–∏—Å—å $DOMAIN ($DOMAIN_IP) –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä ($SERVER_IP)"
        warning "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ A-–∑–∞–ø–∏—Å—å –¥–æ–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    else
        success "DNS –∑–∞–ø–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ: $DOMAIN -> $SERVER_IP"
    fi
    
    install_certbot
    setup_webroot
    create_temp_nginx_config
    
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ nginx
    sleep 5
    
    obtain_certificate
    copy_certificates
    cleanup_temp_nginx
    setup_certificate_renewal
    verify_certificate
    
    success "üéâ SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    log "üåê –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å HTTPS"
    log "üìã –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤: $SSL_DIR"
    log "üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤ cron"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
show_help() {
    echo "SSL Setup Script for app.iqbs.pro"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ü–¶–ò–ò:"
    echo "  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo "  --force        –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    echo "  --dry-run      –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä:"
    echo "  $0                 # –û–±—ã—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL"
    echo "  $0 --force         # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
    echo "  $0 --dry-run       # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    --help|-h)
        show_help
        exit 0
        ;;
    --force)
        FORCE_RENEWAL=true
        ;;
    --dry-run)
        DRY_RUN=true
        ;;
esac

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
main "$@"