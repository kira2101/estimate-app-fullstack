#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ä–∞–±–æ–≤ –¥–ª—è ProjectAssignmentsPage
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ dev –æ–∫—Ä—É–∂–µ–Ω–∏—é
BASE_URL = "https://dev.app.iqbs.pro/api/v1"
# –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–º–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
LOGIN_DATA = {
    "email": "manager@example.com",
    "password": "password123"
}

def test_foremen_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—Ä–∞–±–æ–≤"""
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
    login_response = requests.post(f"{BASE_URL}/auth/login/", json=LOGIN_DATA)
    
    if login_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {login_response.text}")
        return False
    
    login_data = login_response.json()
    token = login_data["token"]
    user = login_data["user"]
    
    print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['full_name']} ({user['role']})")
    
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüë• –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    users_response = requests.get(f"{BASE_URL}/users/", headers=headers)
    
    if users_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {users_response.text}")
        return False
    
    users_response_data = users_response.json()
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    if isinstance(users_response_data, dict) and 'results' in users_response_data:
        users_data = users_response_data['results']
    else:
        users_data = users_response_data
    
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_data)}")
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ—Ä–∞–±–æ–≤
    foremen = [user for user in users_data if isinstance(user, dict) and user.get('role') == '–ø—Ä–æ—Ä–∞–±']
    print(f"üë∑ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ä–∞–±–æ–≤: {len(foremen)}")
    
    if len(foremen) == 0:
        print("‚ö†Ô∏è  –ü—Ä–æ—Ä–∞–±—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        for user in users_data:
            if isinstance(user, dict):
                print(f"  - {user.get('full_name')} ({user.get('role')})")
        return False
    
    print("–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ä–∞–±–æ–≤:")
    for foreman in foremen:
        print(f"  - {foreman.get('full_name')} (ID: {foreman.get('user_id')})")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    print("\nüèóÔ∏è  –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...")
    projects_response = requests.get(f"{BASE_URL}/projects/", headers=headers)
    
    if projects_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤: {projects_response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {projects_response.text}")
        return False
    
    projects_data = projects_response.json()
    projects = projects_data.get('results', projects_data) if isinstance(projects_data, dict) else projects_data
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(projects)}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    print("\nüìã –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π...")
    assignments_response = requests.get(f"{BASE_URL}/project-assignments/", headers=headers)
    
    if assignments_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π: {assignments_response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {assignments_response.text}")
        return False
    
    assignments_data = assignments_response.json()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π: {len(assignments_data)}")
    
    print("–¢–µ–∫—É—â–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:")
    for assignment in assignments_data:
        if isinstance(assignment, dict):
            print(f"  - {assignment.get('project_name')} ‚Üí {assignment.get('user_full_name')}")
        else:
            print(f"  - {assignment}")
    
    print("\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print(f"üìä –ò—Ç–æ–≥–æ: {len(projects)} –ø—Ä–æ–µ–∫—Ç–æ–≤, {len(foremen)} –ø—Ä–æ—Ä–∞–±–æ–≤, {len(assignments_data)} –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π")
    
    return True

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ProjectAssignmentsPage")
    print("=" * 60)
    
    try:
        success = test_foremen_loading()
        if success:
            print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏")
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()